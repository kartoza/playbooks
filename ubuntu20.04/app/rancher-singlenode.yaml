---
- import_playbook: web.yaml

- hosts: all
  become: true
  become_method: sudo
  vars:
    rancher_admin_password: chickensoup

  tasks:
    - name: Ensure snap is installed
      ansible.builtin.apt:
        pkg:
          - snapd
        state: latest
        update_cache: yes
      async: 400
      poll: 30

    - name: Allow tcp port 6443
      # expose kubernetes api port
      community.general.ufw:
        rule: allow
        port: "6443"
        proto: tcp

    # - name: Disable ipv6
    #   # useful for some hypervisor setups
    #   lineinfile:
    #     path: /etc/default/ufw
    #     state: present
    #     regexp: '^IPV6='
    #     line: 'IPV6=no'

    - name: Install kubectl snap
      community.general.snap:
        name: kubectl
        classic: yes
      async: 600
      poll: 30

    - name: Install helm snap
      community.general.snap:
        name: helm
        classic: yes
      async: 600
      poll: 30

    - name: Install k3s
      ansible.builtin.shell: curl -sfL https://get.k3s.io | sh -s - server
      async: 1200
      poll: 30

    - name: Ensure path to kubeconfig exists
      ansible.builtin.shell: mkdir -p {{ lookup('env','HOME') + '/.kube' }}

    - name: Copy the cluster config to the home directory
      ansible.builtin.copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "{{ lookup('env','HOME') | default('/root', True) + '/.kube/config' }}"
        owner: "{{ lookup('env','USR') | default('root', True) }}"
        group: "{{ lookup('env','USR') | default('root', True) }}"
        mode: "0400"
        backup: yes
        remote_src: yes

    - name: Backup the cluster config to the controller data directory
      ansible.builtin.fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "{{ '/ansible/data/' ~ inventory_hostname ~ '.kube-config' }}"
        validate_checksum: yes
        flat: yes

    # - name: Set k8s environment variables
    #   vars:
    #     k8s_environment:
    #       - key: KUBECONFIG
    #         value: /etc/rancher/k3s/k3s.yaml
    #   ansible.builtin.lineinfile:
    #     path: "/etc/environment"
    #     state: present
    #     regexp: "^{{ item.key }}="
    #     line: "{{ item.key }}={{ item.value}}"
    #   loop: "{{ k8s_environment }}"

    - name: Add cert-manager helm repo
      kubernetes.core.helm_repository:
        name: jetstack
        repo_url: "https://charts.jetstack.io"

    - name: Add rancher helm repo
      kubernetes.core.helm_repository:
        name: rancher-stable
        repo_url: "https://releases.rancher.com/server-charts/stable"

    - name: Add longhorn helm repo
      kubernetes.core.helm_repository:
        name: longhorn
        repo_url: "https://charts.longhorn.io"

    - name: Update helm repositories
      ansible.builtin.shell: helm repo update
      async: 1200
      poll: 30

    - name: Install cert-manager helm chart
      ansible.builtin.shell: |
        helm upgrade --install cert-manager jetstack/cert-manager \
          --namespace cert-manager \
          --create-namespace \
          --version v1.5.1 \
          --set installCRDs=true
      async: 1200
      poll: 30

    # - name: Install cert-manager helm chart
    #   kubernetes.core.helm:
    #     name: cert-manager
    #     chart_ref: "jetstack/cert-manager"
    #     atomic: yes
    #     update_repo_cache: yes
    #     release_namespace: cert-manager
    #     create_namespace: yes
    #     chart_version: 1.5.1
    #     release_values:
    #       installCRDs: true
    #     timeout: 15m

    - name: Get public ip of node
      # use external api service to identify the nodes ip
      ansible.builtin.shell: curl https://ipinfo.io/ip
      register: node_public_ip

    # - name: Get public ip of node
    #   # use dig lookup to identify the nodes ip
    #   ansible.builtin.shell: dig {{ inventory_hostname }} +short
    #   register: node_public_ip

    # - name: Show public ip of node
    #   ansible.builtin.debug:
    #     msg: "Node IP: {{ node_public_ip.stdout }}"

    - name: Install rancher helm chart
      ansible.builtin.shell: |
        helm upgrade --install rancher rancher-stable/rancher \
          --namespace cattle-system \
          --create-namespace \
          --set hostname=rancher.{{ node_public_ip.stdout }}.sslip.io \
          --set replicas=1 \
          --version 2.6.4 \
          --set bootstrapPassword={{ rancher_admin_password }}
      async: 1200
      poll: 30

    # - name: Install rancher helm chart
    #   kubernetes.core.helm:
    #     name: rancher
    #     chart_ref: "rancher-latest/rancher"
    #     atomic: yes
    #     update_repo_cache: yes
    #     release_namespace: cattle-system
    #     create_namespace: yes
    #     release_values:
    #       hostname: "{{ node_public_ip }}.sslip.io"
    #       replicas: 1
    #       bootstrapPassword: "{{ rancher_admin_password }}"
    #     timeout: 15m

    - name: Install longhorn dependencies
      ansible.builtin.apt:
        pkg:
          - open-iscsi
          - nfs-common
          # The following requirements are longhorn system dependencies
          # but should be available by default and are not guaranteed
          # to be available from the app store, which may cause task
          # failure. This list is kept for reference purposes.
          # - bash
          # - curl
          # - findmnt
          # - grep
          # - awk
          # - blkid
          # - lsblk
        state: latest
        update_cache: yes
      async: 1200
      poll: 30

    - name: Install longhorn helm chart
      ansible.builtin.shell: |
        helm upgrade --install longhorn longhorn/longhorn \
          --namespace longhorn-system \
          --version 1.2.4 \
          --create-namespace
      async: 1200
      poll: 30

    # - name: Install longhorn helm chart
    #   kubernetes.core.helm:
    #     name: longhorn
    #     chart_ref: "longhorn/longhorn"
    #     atomic: yes
    #     update_repo_cache: yes
    #     release_namespace: longhorn-system
    #     create_namespace: yes
    #     timeout: 15m
